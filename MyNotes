These are my notes for P-0.

2021.09.08.W
Got assigned the project.
Need to make first git commit.

## Ben's answer to Q's
Log4 & Unit testing are unnecessary to the design of your project

Employee required for transactions?
	No, just for signup, before cust has full access
User and pass
	all users must be able to provide user and pass
stretch goals
	try your best, but last and lowest priority
starting acct w balance
	yes, they should have a deposit to make starting balance
if not approved after "money" accepted?
	don't worry about it
employee account already in db?
	up to you
transferring between?
	they need to be able to transfer between DIFFERENT users, not on joint accts
Extra features?
	a console gui or html, maybe, but only if you are very comfortable. 
	considing adding password hashing or emailing customer updates
user role for admin?
	you may, but this is extra
username vs customer name?
	they can be the same for this project
Ben cannot be consulted for technical help; he's a product owner for this project

///////////


Setting up a scrum board for two sprints
to weds
to following weds

////
Main

	package models
		abstract class User
			class Employee extends User
			class Customer extends User
			class Admin	extends User //I might not

	package repo
		interface
			employee to approve accts
			customer to apply, withdraw, deposit, transfer
		class	
			
			
		class DAO
			methods for (String sql)
			
			- a row for each account; include employees as exceptional case users
			CREATE table (primary key, username, customer_name, account, assoc user, 
			conditional INSERT queries if approved, within bounds, etc

		
			READ
			-select accounts, view balance
			
			UPDATE
				apply (INSERT); withdraw, deposit, transfer 
		
	
	package service
			interface Account
				a way of abstracting methods
			class AccountService
			class AccountManager
			class UserRegistration	
	
	package views
			interface menu
						
			class MenuImp
		
		